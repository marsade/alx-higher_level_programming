Usage
=====

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)

Errors
=====
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

No arguments
=======
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

Empty string
=======
>>> bg.integer_validator("")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

Less than 0
======
>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
ValueError: age must be greater than 0

Not an integer
=====
>>> bg.integer_validator("age", 13.5)
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", "13.5")
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", {5, 8, 9})
Traceback (most recent call last):
TypeError: age must be an integer

>>> bg.integer_validator("age", [5])
Traceback (most recent call last):
TypeError: age must be an integer